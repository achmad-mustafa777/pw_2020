Ajax Live Search

-> tambahkan class pada form pencarian dibagian input dan tombol cari untuk memudahka menghubungkan dengan javascript
-> tambahkan class dan bungkus dengan <div> pada bagian tabel yang akan diganti sesuai dengan pencarian
-> diakhir body tambahkan script yang linknya diarahkan ke file javascript
-> yang akan dilakukan sekarang adalah menangkap ketiga element yang diberi atribut class untuk melakukan event hendler di file javascript yaitu script.js
-> buat variaberl di file script.js untuk menangkap ke tiga element class
-> tambahkan sebuah event pada class keyword untuk melakukan sesuatu seperti contoh dibawah ini:

    //testing saja
    keyword.addEventListener('keyup',function(){
      console.log('ok)
    })
    // artinya tambahkan sebuah event ketika tombol keyup(ketika kita mengetik sesuatu di input pencarian lalu melepaskan tombol keyboard) maka jalankan function yang akan menampilkan oke di console log

-> jalankan Ajaxnya di element keyword yang sudah di tambahkan event, yang di dalamnya terdapat 2 cara:
  1. xmlhttprequset
  2. fetch

  1. cara lama menggunakan xmlhttprequset
    - buat variaberl untuk menampung sebuah objek Ajaxnya
      // secara singkat ajax adalah bagaimana cara kita melakukan request terhadap sebuah sumber, sumbernya website lain -
         tanpa melakukan refresh halaman, jadi yang terlihat hanyalah instant / Live
    - kita panggil xhr.onreadystatechange() yang berisi function pengecekan
    - siapkan Ajaxnya

      xhr.open('get','ajax/ajax_cari.php');
      // parameter pertama berisi methode apa yang akan digunakan
      // parameter kedua berisi tujuan requestnya kemana

    - jalankan Ajaxnya

      xhr.send();

-> kemudian yang akan dilakukan adalah mengambil apapun yang diketikkan dikolom pencarian, setiap tulisan
   yang diketik dikolom pencarian akan dikirimkan ke file ajax_cari.php, dengan cara mengirim balik -
   nilai keywordnya

      // keyword.value adalah apa yang kita ketikan didalan kolom pencarian menjadi sebuah value dari-
         keyword

      // xhr.open('get','ajax/ajax_cari.php?keyword=' + keyword.value);

-> kemudian kita tangkap di file ajax_cari.php 
-> lalu tambahkan fungsi responseText di xhr untuk menerima kembali apapun yang ditangkap di file ajax_cari.php 

    xhr.responseText;

-> mengganti isi container tabel yang dibungkus dengan <div> dengan hasil dari reseposeText / hasil dari yang ditangkap -
   file ajax_cari.php 
-> beralih ke file ajax_cari.php, tujuan kita adalah mengganti isi dari mahasiswanya dengan pencarian yang kita ketik -
   dikolom pencarian
    1. menghubungkan file function.php 
    2. megngisi variaberl mahasiswa dengan fungsi cari 
    3. mengcopy tabel index.php yang akan menjadi bagian dari responseText

-> kita hilangkan tombol cari dengan css dihalaman script,js

-> cara kedua menggunakan methode fatch yang terdiri 3 baris saja


Upload Gambar bagian ke satu 

-> Memperbaiki tampilannya
-> masuk kebagaian halaman tambahkan
-> tambahkan atribut enctype="multipart/form-data" pada form tambah data agar Upload filenya berjalan, dengan menambahkan -
   atribut tersebut akan memiliki akses ke super global baru yaitu $_FILE
-> ubah bagian input gambar dibagian type menjadi "file"
-> kemudian memperbaiki bagian fungsinya di halaman function.php 
-> buat fungsi baru yaitu function upload yang terdiri dari:
  - menangkap data file upload kemudian dimasukan ke dalam variaberl
  - melakukan serangkaian pengecekan :
    1. ketika gambar tidak dipilih atau kosong
      - buat pengecekan di bagian fungsi tambah di bagian variabel gambar dengan return false jika tidak ada gambar
    2. ketika yang diupload bukan file gambar
      - cek ekstensi filenya
      - buat variabel array yang berisi ekstensi file yang diizinkan untuk upload
      - pecah nama_file gambar yang diupload dengan menggunakan fungsi explode();

        explode('.',$nama_file);
        //parameter pertama dipecah menggunakan titik
        //parameter kedua string apa yang mau dipecah

      - ubah semuanya menjadi huruf kecil lalu 
      - lalu gunakan fungsi end() untuk mengambil bagian akhirnya
      - lakukan pengecekan dengan menggunakan fungsi in_array() yang mengembalikan nilai true jika sebuah nilai yang -
        dibandingkan ada di dalam aray tersebut, jika ada maka gambar bisa diupload
    3. cek type filenya untuk menghindari script jahat
    4. cek ukuran filenya

  - lakuka  generate nama file baru untuk menghindari tumpang tindih, jika file yang diupload memiliki nama yang sama 
      1. menambahkan variabel baru yang diisi dengan fungsi uniqid() bertujuan untuk membangkitkan bilangan  random
      2. kita konkets dengan ekstensi file
      3. lalu lakukan move_upload_file();

         move_uploaded_file($tmp_file, 'img/' . $nama_file_baru);
         // memindahkan file yang diupload dari tmp_file ke tempat penyimpanan yang diinginkan
         // parameter pertama adalah tempat file tmp 
         // parameter kedua adalah tempat penyimpanan yang kita inginkan  dan nama_file_baru


Upload Gambar bagian kedua

-> memperbaiki tampilan dibagaian tambah.php 
  1. tambahkan tag <img> untuk menambahkan gambar defaultny tujuannya agar user jika tidak -
     ingin menambahkan fotonya.
  2. tambahkan class pada tag input gambar dan img agar bisa terhubung ke javascript sehingga-
     tampilannya bisa lebih interaktif
  3. tambahkan juga event onchange yang nilainya adalah fungsi javascript
  4. kemudian hubugnkan dengan file javascript yaitu js/script.js

-> buat fungsi baru di file script.js
  1. buat fungsi previewImage() yang terdiri dari:
    - tangkap class gambarnya dan img src nya 
    - panggil class fileReader() untuk membaca file yang akan kita upload kemudian filenya -
      disimpan untuk menggantikan file img src no-photo dengan file upload yang baru 

-> perbaiki bagian file function.php 
  1. perbaiki dibagaian fungsi upload dibagian pengecekan ketika gambar tidak diisi atau diupload-
     ubah nilai returnnya dari false ke nama gambar defaultnya

-> perbaiki tampilan di file ubah.php 
  1. ubah input gambar menjadi upload gambar seperti tampilan bagian tambah.php 
  2. dibagaian link img src, ganti dengan gambar yang sudah ada di databases
  3. tambahkan tag input dengan type hidden dan nama gamba_lama dengan value adalah gambar lama didatabases-
     tujuannya jika user tidak ingin mengubah gambar lamanya
  4. hubugnkan denga file javascript

-> perbaiaki lagi dibagaian function.php 
  1. perbaiki dibagaian fungsi ubah
  2. buat pengecekan jika user tidak ingin mengganti gambar lamanya

-> edit kembali di bagaian fungsi hapus gambar
  1. tujuannya untuk menghapus di folder yang menyimpan gambar, karena selama ini yang dihapus hanyalah-
     dibagaian penyimpanan databases
  2. buat pengecekan penghapusan agar yang dihapus bukan gambar defaultnya, untuk menghapus gambar di folder -
     menggunakan fungsi unlink(); 
